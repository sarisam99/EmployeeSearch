<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		 http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		 http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		 http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/mvc 
		 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	 <context:component-scan base-package="com.mindtree.employeesearch.controller" />
		<context:component-scan base-package="com.mindtree.employeesearch.employeedao" />
	<context:component-scan base-package="com.mindtree.employeesearch.employeedaoImpl" />
	<context:annotation-config />
	
		<!-- Resource mapping -->
	<!-- <mvc:resources location="/WEB-INF/css/" mapping="/css/**" />
	<mvc:resources location="/WEB-INF/images/" mapping="/images/**" />
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**" />
	<context:annotation-config /> -->
		<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocations" value="classpath:hibernate.cfg.xml">
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" >
	<constructor-arg ref="sessionFactory"></constructor-arg>
	</bean>

	<tx:annotation-driven />
	
<!-- 	
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="com.mindtree.springmvc.entity">
		</property>
	</bean>


	<bean id="marshallingConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<constructor-arg ref="jaxbMarshaller" />
		<property name="supportedMediaTypes" value="application/xml" />
	</bean> -->
<!-- 	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    <property name="favorPathExtension" value="false"/>
    <property name="mediaTypes">
        <value>
            json=application/json
            xml=application/xml
        </value>
    </property>
    <property name="defaultContentType" value="application/json"/>
</bean> -->
	
	
	
	

<!-- 	<mvc:annotation-driven>
		 <mvc:message-converters register-defaults="true">
			Setting the JSON to HTTP message converter and overriding the default 
				setting
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.mindtree.springmvc.jsonobjectmapper.JsonObjectMapper">
					</bean>
				</property>
			</bean>
		</mvc:message-converters>  
	</mvc:annotation-driven> -->





	<!-- <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">

		<property name="basename"
			value="classpath:com/mindtree/springmvc/messages/i18n/messages" />
		<property name="defaultEncoding" value="UTF-8" />


	</bean> 

	<mvc:interceptors>
		<bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>

	</mvc:interceptors>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en"></property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://localhost:3306/sarisam99</value>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>Welcome123</value>
		</property>
	</bean>
	


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="packagesToScan" value="com.mindtree.springmvc.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				uncomment this for first time run
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<tx:annotation-driven /> -->

	<!-- <bean id="userDao" class="com.mindtree.mindtreelive.dao.hibernateImpl.UserDaoHibernateImpl"/> -->
	<!-- <bean id="userValidator" class="com.mindtree.springmvc.validator.UserValidator" 
		/> -->

</beans>